---
# Source: homelab-base-chart/templates/asn/asn-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-redirect-config
  namespace: argocd
  labels:
    app: asn
data:
  app.js: |
    const http = require('http');

    const paperlessUrl = process.env.PAPERLESS_URL;
    if (!paperlessUrl) {
        throw new Error('PAPERLESS_URL environment variable is not set');
    }

    const server = http.createServer((req, res) => {
        const matches = req.url.match(/^\/(\d+)$/);
        if (matches) {
            const asn = matches[1];
            res.writeHead(302, { Location: `${paperlessUrl}/documents?archive_serial_number=${asn}` });
            res.end();
        } else {
            res.writeHead(404, { 'Content-Type': 'text/plain' });
            res.end('404 Not Found');
        }
    });

    server.listen(80, () => {
        console.log('Server is running on port 80');
    });
---
# Source: homelab-base-chart/templates/_generic/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: asn-service
  namespace: argocd
spec:
  ports:
    - name: http
      port: 80
  selector:
    app: asn
---
# Source: homelab-base-chart/templates/asn/asn-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-redirect-deployment
  namespace: argocd
  labels:
    app: asn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: asn
  template:
    metadata:
      labels:
        app: asn
    spec:
      containers:
        - name: asn-node-redirect-container
          image: node:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: app-volume
              mountPath: /usr/src/app
          command: ["node", "/usr/src/app/app.js"]
          env:
            - name: PAPERLESS_URL
              value: "https://paperlessngx.home-server.dev"
      volumes:
        - name: app-volume
          configMap:
            name: node-redirect-config
---
# Source: homelab-base-chart/templates/_generic/ingress-https.yaml
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: asn-https-80-0
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-options: Prune=true,SkipDryRunOnMissingResource=true
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`asn.home-server.dev`) 
      kind: Rule
      priority: 10
      services:
        - name: asn-service
          port: 80
  tls:
    certResolver: cloudflare
