---
# Source: homelab-base-chart/templates/paperlessgpt/paperlessgpt-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: paperlessgpt-config
  namespace: argocd
data:
  PAPERLESS_BASE_URL: "http://paperlessngx-service:8000"
  LLM_PROVIDER: "openai" # 'openai' or 'ollama'
  LLM_MODEL: "gpt-4o"     # gpt-4o or 'llama2'
  LLM_LANGUAGE: "German" # Optional, default is 'English'
  OLLAMA_HOST: "http://ollama-service:11434" # If using Ollama
---
# Source: homelab-base-chart/templates/_generic/deployment.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "paperlessgpt-prompts-pv"
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-options: Prune=true
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    type: Directory
    path: /mnt/somewhere/encrypted/apps/paperless-gpt/prompts
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: "paperlessgpt-prompts-pvc"
    namespace: argocd
---
# Source: homelab-base-chart/templates/_generic/deployment.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "paperlessgpt-prompts-pvc"
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-options: Prune=true
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# Source: homelab-base-chart/templates/_generic/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: paperlessgpt-service
  namespace: argocd
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: paperlessgpt
---
# Source: homelab-base-chart/templates/_generic/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperlessgpt-deployment
  namespace: argocd
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: paperlessgpt
  template:
    metadata:
      labels:
        app: paperlessgpt
    spec:
      containers:
        - name: paperlessgpt
          image: icereed/paperless-gpt:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: "/app/prompts"
              name: paperlessgpt-prompts-volume
          envFrom:
            - configMapRef:
                name: paperlessgpt-config
            - secretRef:
                name: paperlessgpt-secret
      volumes:
        - name: paperlessgpt-prompts-volume
          persistentVolumeClaim:
            claimName: paperlessgpt-prompts-pvc
---
# Source: homelab-base-chart/templates/paperlessgpt/paperlessgpt-external-secret.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: paperless-gpt-external-secret
  namespace: argocd
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: akeyless-secret-store
  target:
    name: paperlessgpt-secret
    creationPolicy: Owner
    template:
      metadata:
        annotations:
          X-Drone-Events: access-forbidden
          X-Drone-Repos: access-forbidden
  data:
    - secretKey: "PAPERLESS_API_TOKEN"
      remoteRef:
        key: "/kind-homelab/paperlessgpt/PAPERLESS_API_TOKEN"
    - secretKey: "OPENAI_API_KEY"
      remoteRef:
        key: "/kind-homelab/paperlessgpt/OPENAI_API_KEY"
---
# Source: homelab-base-chart/templates/_generic/ingress-https.yaml
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: paperlessgpt-https-8080-0
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-options: Prune=true,SkipDryRunOnMissingResource=true
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`paperless-gpt.home-server.dev`) 
      kind: Rule
      priority: 10
      services:
        - name: paperlessgpt-service
          port: 8080
      middlewares:
        - name: traefik-forward-auth
          namespace: argocd
  tls:
    certResolver: cloudflare
