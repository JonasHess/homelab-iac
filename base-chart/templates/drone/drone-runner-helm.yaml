{{- if .Values.apps.drone.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: drone-runner-helm
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  project: default
  source:
    chart: drone-runner-docker
    repoURL: https://charts.drone.io
    targetRevision: 0.6.1
    helm:
      # Values file as block file
      valuesObject:

        replicaCount: 1
        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 100
          targetCPUUtilizationPercentage: 80
          # targetMemoryUtilizationPercentage: 80

        rbac:
          buildNamespaces:
            - argocd


        ## If you'd like to provide your own Kubernetes Secret object instead of passing your values
        ## in un-encrypted, pass in the name of a created + populated Secret in the same Namespace
        ## as the Drone server. All secrets within this configmap will be mounted as environment
        ## variables, with each key/value mapping to a corresponding environment variable on the
        ## Drone server.
        ##
        extraSecretNamesForEnvFrom:
        - drone-secrets


        ## The keys within the "env" map are mounted as environment variables on the Kubernetes runner pod.
        ## See the full reference of Kubernetes runner environment variables here:
        ## Ref: https://docs.drone.io/runner/docker/configuration/reference/
        ##
        env:
          ## The hostname/IP (and optionally the port) for your Kubernetes runner. Defaults to the "drone"
          ## service that the drone server Chart creates by default.
          ## Ref: https://docs.drone.io/runner/docker/configuration/reference/drone-rpc-host/
          ##
          DRONE_RPC_HOST: drone-helm:8080

          ## The protocol to use for communication with Drone server.
          ## Ref: https://docs.drone.io/runner/docker/configuration/reference/drone-rpc-proto/
          ##
          DRONE_RPC_PROTO: http

          ## Determines the default Kubernetes namespace for Drone builds to run in.
          ## Ref: https://kube-runner.docs.drone.io/installation/reference/drone-namespace-default/
          ##
          DRONE_NAMESPACE_DEFAULT: argocd

          ## Ref: https://kube-runner.docs.drone.io/installation/reference/drone-secret-plugin-endpoint/
          #
          DRONE_SECRET_PLUGIN_ENDPOINT: http://drone-kubernetes-secrets:3000

  destination:
    server: "https://kubernetes.default.svc"
    namespace: argocd
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
    syncOptions:
      - allowEmpty=true
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 1m # the maximum amount of time allowed for the backoff strategy
{{- end -}}