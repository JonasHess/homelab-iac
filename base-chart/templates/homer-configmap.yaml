{{- if .Values.apps.homer.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: homer-config
  namespace: {{ .Values.apps.homer.argocd.namespace | default "argocd" }}
  labels:
    app: homer
data:
  config.yml: |
    ---
    title: "Home Server Dashboard"
    subtitle: ""

    connectivityCheck: false

    # Default theme settings
    # Using default Homer styling (removed custom theme and colors)

    # Customization options
    header: true
    footer: ''
    defaults:
      layout: columns

    # Navigation
    links:
      - name: "GitHub"
        icon: "fab fa-github"
        url: "https://github.com/bastienwirtz/homer"
        target: "_blank"
      - name: "Documentation"
        icon: "fas fa-book"
        url: "https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md"
        target: "_blank"
      - name: "Refresh"
        icon: "fas fa-sync"
        url: "/"

    # Services organized by groups defined in values.yaml
    services:
      {{- $groups := dict }}

      {{- /* First collect all apps into their corresponding groups */ -}}
      {{- range $appName, $appConfig := .Values.apps }}
        {{- if and $appConfig.enabled $appConfig.homer }}
          {{- if $appConfig.homer.enabled }}
            {{- /* Get the group information from the centralized config */ -}}
            {{- $groupKey := $appConfig.homer.group | default "other" }}
            {{- $groupInfo := index $.Values.apps.homer.groups $groupKey }}

            {{- /* Initialize the group if it doesn't exist */ -}}
            {{- if not (hasKey $groups $groupKey) }}
              {{- $_ := set $groups $groupKey (dict "name" $groupInfo.name "icon" $groupInfo.icon "logo" $groupInfo.logo "items" list) }}
            {{- end }}

            {{- /* Get app icon/logo - prefer specific app logo if set */ -}}
            {{- $appLogo := $appConfig.homer.logo | default "" }}

            {{- /* Add the app to the group's items */ -}}
            {{- $subtitle := $appConfig.homer.subtitle | default "" }}
            {{- $item := dict "name" ($appConfig.homer.displayName | default $appName)
                             "logo" $appLogo
                             "subtitle" $subtitle
                             "tag" ($appConfig.homer.tag | default "")
                             "url" ($appConfig.homer.url | default (printf "https://%s.%s" (default $appName $appConfig.homer.subdomain) $.Values.global.domain))
                             "target" "_blank" }}

            {{- $groupItems := (index $groups $groupKey).items }}
            {{- $groupItems = append $groupItems $item }}
            {{- $_ := set (index $groups $groupKey) "items" $groupItems }}
          {{- end }}
        {{- end }}
      {{- end }}

      {{- /* Add any additional links defined directly in homer config */ -}}
      {{- if .Values.apps.homer.additionalLinks }}
        {{- range $linkId, $link := .Values.apps.homer.additionalLinks }}
          {{- $groupKey := $link.group | default "other" }}
          {{- $groupInfo := index $.Values.apps.homer.groups $groupKey }}

          {{- /* Initialize the group if it doesn't exist */ -}}
          {{- if not (hasKey $groups $groupKey) }}
            {{- $_ := set $groups $groupKey (dict "name" $groupInfo.name "icon" $groupInfo.icon "logo" $groupInfo.logo "items" list) }}
          {{- end }}

          {{- /* Add the link to the group's items */ -}}
          {{- $item := dict "name" $link.name
                           "logo" ($link.logo | default "")
                           "subtitle" ($link.subtitle | default "")
                           "tag" ($link.tag | default "")
                           "url" $link.url
                           "target" "_blank" }}

          {{- $groupItems := (index $groups $groupKey).items }}
          {{- $groupItems = append $groupItems $item }}
          {{- $_ := set (index $groups $groupKey) "items" $groupItems }}
        {{- end }}
      {{- end }}

      {{- /* Now output the groups */ -}}
      {{- range $groupKey, $groupConfig := $groups }}
      - name: "{{ $groupConfig.name }}"
        icon: "{{ $groupConfig.icon }}"
        items:
        {{- range $item := $groupConfig.items }}
          - name: "{{ $item.name }}"
            {{- if $item.logo }}
            logo: "{{ $item.logo }}"
            {{- end }}
            subtitle: "{{ $item.subtitle }}"
            {{- if $item.tag }}
            tag: "{{ $item.tag }}"
            {{- end }}
            url: "{{ $item.url }}"
            target: "{{ $item.target }}"
        {{- end }}
      {{- end }}
{{- end }}