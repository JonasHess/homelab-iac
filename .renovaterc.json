{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended"
  ],
  "timezone": "Europe/Berlin",
  "schedule": [
    "after 12:00 and before 22:00"
  ],
  "prConcurrentLimit": 50,
  "prHourlyLimit": 50,
  "commitMessagePrefix": "chore:",
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "branchPrefix": "renovate/",
  "labels": [
    "dependencies",
    "renovate"
  ],
  "assignees": [],
  "reviewers": [],
  "platformAutomerge": true,
  "packageRules": [
    {
      "description": "Auto-merge patch and minor updates for Helm charts",
      "matchCategories": [
        "helm"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "merge"
    },
    {
      "description": "Auto-merge patch and minor updates for Docker images",
      "matchCategories": [
        "docker"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "merge"
    },
    {
      "description": "Auto-merge patch and minor updates for Python packages",
      "matchCategories": [
        "python"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "merge"
    },
    {
      "description": "Auto-merge patch and minor updates for JavaScript/Node.js packages",
      "matchCategories": [
        "js"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "merge"
    },
    {
      "description": "Auto-merge patch and minor updates for Go modules",
      "matchCategories": [
        "golang"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "merge"
    },
    {
      "description": "Auto-merge patch and minor updates for GitHub Actions",
      "matchCategories": [
        "ci"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      "automerge": true,
      "automergeType": "pr",
      "automergeStrategy": "merge"
    },
    {
      "description": "Require manual approval for major Helm chart updates",
      "matchCategories": [
        "helm"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false,
      "addLabels": [
        "major-update"
      ]
    },
    {
      "description": "Require manual approval for major Docker image updates",
      "matchCategories": [
        "docker"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false,
      "addLabels": [
        "major-update"
      ]
    },
    {
      "description": "Require manual approval for major Python package updates",
      "matchCategories": [
        "python"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false,
      "addLabels": [
        "major-update"
      ]
    },
    {
      "description": "Require manual approval for major JavaScript/Node.js package updates",
      "matchCategories": [
        "js"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false,
      "addLabels": [
        "major-update"
      ]
    },
    {
      "description": "Require manual approval for major Go module updates",
      "matchCategories": [
        "golang"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false,
      "addLabels": [
        "major-update"
      ]
    },
    {
      "description": "Require manual approval for major GitHub Actions updates",
      "matchCategories": [
        "ci"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false,
      "addLabels": [
        "major-update"
      ]
    },
    {
      "description": "Use semantic versioning for qBittorrent and constrain versions",
      "matchPackageNames": [
        "lscr.io/linuxserver/qbittorrent"
      ],
      "versioning": "semver",
      "allowedVersions": "<10"
    },
    {
      "description": "Use semantic versioning for Jellyfin and ignore old CalVer versions",
      "matchPackageNames": [
        "lscr.io/linuxserver/jellyfin"
      ],
      "versioning": "semver",
      "allowedVersions": "<=2000"
    }
  ],
  "ignoreDeps": [
    "629099703604.dkr.ecr.eu-central-1.amazonaws.com/nudelkiste"
  ],
  "hostRules": [],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update targetRevision in ArgoCD Application templates",
      "managerFilePatterns": [
        "/apps/.+/templates/.+-application\\.yaml$/"
      ],
      "matchStrings": [
        "chart:\\s+(?<depName>[^\\s\\n]+)[\\s\\S]*?repoURL:\\s+(?<registryUrl>https://[^\\s\\n]+)[\\s\\S]*?targetRevision:\\s+(?<currentValue>[^\\s\\n]+)"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "description": "Update Docker image references in YAML files",
      "managerFilePatterns": [
        "/(^|/)apps/.+\\.yaml$/"
      ],
      "matchStrings": [
        "image:\\s*['\"]?(?<depName>[^:'\"\\s]+):(?<currentValue>[^'\"\\s]+)['\"]?"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/test/**",
    "**/tests/**",
    "doc/**"
  ]
}
