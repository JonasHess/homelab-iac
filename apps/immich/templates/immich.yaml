apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-app-server
  namespace: {{ $.Release.Namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich
      component: server
  template:
    metadata:
      labels:
        app: immich
        component: server
    spec:
      initContainers:
        - name: init-config
          image: alpine:3.22.1
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk add --no-cache gettext
              envsubst < /config-template/immich-config.json.templ > /config/immich-config.json
          volumeMounts:
            - name: config-template
              mountPath: /config-template
            - name: config-output
              mountPath: /config
          env:
            - name: OAUTH_CLIENT_ID
              value: {{ .Values.global.traefik_forward_auth.oidc_client_id | quote }}
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: immich-credentials
                  key: client_secret
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-credentials
                  key: email_password
            - name: SMTP_ENABLED
              value: {{ .Values.smtp.enabled | quote }}
            - name: SMTP_HOST
              value: {{ .Values.smtp.host | quote }}
            - name: SMTP_FROM
              value: {{ .Values.smtp.from | quote }}
            - name: SMTP_IGNORE_CERT
              value: {{ .Values.smtp.ignoreCert | quote }}
            - name: SMTP_PORT
              value: {{ .Values.smtp.port | quote }}
            - name: SMTP_USERNAME
              value: {{ .Values.smtp.username | quote }}
            - name: OAUTH_ISSUER_URL
              value: {{ .Values.global.traefik_forward_auth.oidc_issuer_url | quote }}
            - name: SERVER_EXTERNAL_DOMAIN
              value: {{ printf "https://%s.%s" .Values.server.externalSubDomain  .Values.global.domain | quote }}
      containers:
        - name: server
          image: ghcr.io/immich-app/immich-server:v1.137.3
          imagePullPolicy: Always
          ports:
            - containerPort: 2283
              name: http
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: config-output
              mountPath: /config
          resources:
            {{- with .Values.resources.server }}
            requests:
              memory: {{ .requests.memory | quote }}
              cpu: {{ .requests.cpu | quote }}
            limits:
              memory: {{ .limits.memory | quote }}
              cpu: {{ .limits.cpu | quote }}
            {{- end }}
          env:
            - name: DB_HOSTNAME
              value: "immich-postgres"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-db-credentials
                  key: password
            - name: DB_DATABASE_NAME
              value: "immich"
            - name: REDIS_HOSTNAME
              value: "immich-redis"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-redis-credentials
                  key: password
            - name: DB_PORT
              value: "5432"
            - name: NODE_ENV
              value: "production"
            - name: IMMICH_WEB_URL
              value: "https://immich.{{ .Values.global.domain }}"
            - name: IMMICH_LOG_LEVEL
              value: "debug"
            - name: TZ
              value: "Europe/Berlin"
            - name: IMMICH_CONFIG_FILE
              value: "/config/immich-config.json"
          livenessProbe:
            httpGet:
              path: /server-info/ping
              port: 2283
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /server-info/ping
              port: 2283
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: immich-library-pvc
        - name: config-template
          configMap:
            name: immich-config-map
        - name: config-output
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: immich-app-server
  namespace: {{ $.Release.Namespace }}
  labels:
    app: immich
    component: server
spec:
  selector:
    app: immich
    component: server
  ports:
    - port: 2283
      targetPort: 2283
      name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-app-machine-learning
  namespace: {{ $.Release.Namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich
      component: machine-learning
  template:
    metadata:
      labels:
        app: immich
        component: machine-learning
    spec:
      containers:
        - name: machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:release
          imagePullPolicy: Always
          resources:
            {{- with .Values.resources.machineLearning }}
            requests:
              memory: {{ .requests.memory | quote }}
              cpu: {{ .requests.cpu | quote }}
            limits:
              memory: {{ .limits.memory | quote }}
              cpu: {{ .limits.cpu | quote }}
            {{- end }}
          env:
            - name: REDIS_HOSTNAME
              value: "immich-redis"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-redis-credentials
                  key: password
            - name: NODE_ENV
              value: "production"
          volumeMounts:
            - name: model-cache
              mountPath: /cache
          livenessProbe:
            httpGet:
              path: /ping
              port: 3003
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /ping
              port: 3003
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: model-cache
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: immich-app-machine-learning
  namespace: {{ $.Release.Namespace }}
  labels:
    app: immich
    component: machine-learning
spec:
  selector:
    app: immich
    component: machine-learning
  ports:
    - port: 3003
      targetPort: 3003
      name: http
  type: ClusterIP
