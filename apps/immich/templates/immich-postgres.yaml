apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-postgres
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate  # Ensures only one pod at a time during updates
  selector:
    matchLabels:
      app: immich
      component: database
  template:
    metadata:
      labels:
        app: immich
        component: database
    spec:
      containers:
        - name: postgres
          image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
          args:
            - postgres
            - -c
            - shared_preload_libraries=vectors.so
            - -c
            - search_path="$user", public, vectors
            - -c
            - logging_collector=on
            - -c
            - max_wal_size=2GB
            - -c
            - shared_buffers=512MB
            - -c
            - wal_compression=on
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-db-credentials
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: immich-db-credentials
                  key: username
            - name: POSTGRES_DB
              value: "immich"
            - name: POSTGRES_INITDB_ARGS
              value: '--data-checksums'
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - |
                  pg_isready --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" || exit 1;
                  Chksum="$(psql --dbname="${POSTGRES_DB}" --username="${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
                  echo "checksum failure count is $Chksum";
                  [ "$Chksum" = '0' ] || exit 1
            initialDelaySeconds: 30
            periodSeconds: 300
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - --dbname=$(POSTGRES_DB)
                - --username=$(POSTGRES_USER)
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: immich-postgresql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: immich-postgres
  namespace: {{ $.Release.Namespace }}
  labels:
    app: immich
    component: database
spec:
  selector:
    app: immich
    component: database
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres
  type: ClusterIP
