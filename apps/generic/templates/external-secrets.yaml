{{- $appName := required "appName must be set in values.yaml" .Values.appName }}

{{- if .Values.externalSecrets }}
  {{- range $secretName, $secretData := .Values.externalSecrets }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $secretName }}-external-secret
  namespace: {{ $.Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-options: Prune=true,SkipDryRunOnMissingResource=true
spec:
  refreshInterval: {{ $.Values.global.externalSecrets.refreshInterval | default "1h" }}

  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.global.externalSecrets.clusterSecretStoreRef.name }}

  target:
    name: {{ $secretName }}
    creationPolicy: Owner

  data:
    {{- range $secret := $secretData }}
      {{- range $secretKey, $remotePath := $secret }}
        {{- if not (hasPrefix "/" $remotePath) }}
          {{- fail (printf "Remote path '%s' must start with a '/' character" $remotePath) }}
        {{- end }}
    - secretKey: "{{ $secretKey }}"
      remoteRef:
        key: "{{ $.Values.global.akeyless.path }}{{ $remotePath }}"
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}