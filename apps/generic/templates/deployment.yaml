{{- $appName := required "appName must be set in values.yaml" .Values.appName }}

{{- if .Values.deployment }}
  {{- $deployment := required "deployment configuration must be set in values.yaml" .Values.deployment }}
  {{- $image := required "deployment.image must be set in values.yaml" $deployment.image }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appName }}-deployment
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $appName }}
  template:
    metadata:
      labels:
        app: {{ $appName }}
    spec:
      containers:
        - name: {{ $appName }}
          image: {{ $image }}
          {{- if $deployment.imagePullPolicy }}
          imagePullPolicy: {{ $deployment.imagePullPolicy }}
          {{- end }}
          {{- if $deployment.securityContext }}
          securityContext:
          {{- toYaml $deployment.securityContext | nindent 12 }}
          {{- end }}
          {{- with $deployment.resources }}
          resources:
            {{- if .limits }}
            limits:
              {{- range $key, $value := .limits }}
              {{ $key }}: {{ $value | quote }}
              {{- end }}
            {{- end }}
            {{- if .requests }}
            requests:
              {{- range $key, $value := .requests }}
              {{ $key }}: {{ $value | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          ports:
            {{- range $port := $deployment.ports }}
            - containerPort: {{ required "containerPort must be specified for each port" $port.containerPort }}
            {{- end }}
          volumeMounts:
            {{- range $mountName, $mount := $deployment.pvcMounts }}
            - mountPath: "{{ required (printf "mountPath for pvcMount %s must be specified" $mountName) $mount.mountPath }}"
              name: {{ $appName }}-{{ $mountName }}-volume
            {{- end }}
            {{- range $mountName, $mount := $deployment.deviceMounts }}
            - mountPath: "{{ required (printf "mountPath for deviceMount %s must be specified" $mountName) $mount.mountPath }}"
              name: {{ $appName }}-{{ $mountName }}-volume
            {{- end }}
            {{- range $mountName, $mount := $deployment.configMapMounts }}
            - mountPath: "{{ required (printf "mountPath for configMapMount %s must be specified" $mountName) $mount.mountPath }}"
              name: {{ $appName }}-{{ $mountName }}-volume
            {{- end }}
          {{- if $deployment.envFrom }}
          envFrom:
            {{- if $deployment.envFrom.configMapRef }}
            - configMapRef:
                name: {{ required "envFrom.configMapRef must be a valid configMap name" $deployment.envFrom.configMapRef }}
            {{- end }}
            {{- if $deployment.envFrom.secretRef }}
            - secretRef:
                name: {{ required "envFrom.secretRef must be a valid secret name" $deployment.envFrom.secretRef }}
            {{- end }}
          {{- end }}
      volumes:
        {{- range $mountName, $mount := $deployment.pvcMounts }}
        - name: {{ $appName }}-{{ $mountName }}-volume
          persistentVolumeClaim:
            claimName: {{ $appName }}-{{ $mountName }}-pvc
        {{- end }}
        {{- range $mountName, $mount := $deployment.deviceMounts }}
        - name: {{ $appName }}-{{ $mountName }}-volume
          hostPath:
            path: {{ required (printf "hostPath for deviceMount %s must be specified" $mountName) $mount.hostPath | quote }}
            type: CharDevice
        {{- end }}
        {{- range $mountName, $mount := $deployment.configMapMounts }}
        - name: {{ $appName }}-{{ $mountName }}-volume
          configMap:
            name: {{ required (printf "configMapName for configMapMount %s must be specified" $mountName) $mount.configMapName }}
        {{- end }}

{{- range $mountName, $mount := $deployment.pvcMounts }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "{{ $appName }}-{{ $mountName }}-pv"
  namespace: {{ $.Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-options: Prune=true
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    type: Directory
    path: {{ required (printf "deployment.pvcMounts.%s.hostPath must be set in values.yaml" $mountName) $mount.hostPath }}
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: "{{ $appName }}-{{ $mountName }}-pvc"
    namespace: {{ $.Release.Namespace }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ $appName }}-{{ $mountName }}-pvc"
  namespace: {{ $.Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-options: Prune=true
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
{{- end }}
{{- end }}