{{- $appName := required "appName must be set in values.yaml" .Values.appName }}
{{- if .Values.cronjob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $appName }}-backup
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $appName }}
    component: backup
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit | default 3 }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ $appName }}
            component: backup
        spec:
          serviceAccountName: restic-backup-scanner
          restartPolicy: {{ .Values.cronjob.restartPolicy | default "OnFailure" }}
          hostname: {{ $appName }}-backup
          containers:
          - name: backup
            image: python:3.11-alpine
            command: ["/bin/sh"]
            args:
              - -c
              - |
                echo "Installing system dependencies..."
                apk add --no-cache restic jq
                echo "Installing Python dependencies..."
                pip install --no-cache-dir -r /scripts/requirements.txt
                echo "Starting backup operation..."
                python /scripts/restic-operations.py backup restic/backup=true
            {{- if .Values.cronjob.env }}
            env:
            {{- range .Values.cronjob.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.cronjob.envFrom }}
            envFrom:
            {{- if .Values.cronjob.envFrom.secretRef }}
            - secretRef:
                name: {{ .Values.cronjob.envFrom.secretRef }}
            {{- end }}
            {{- end }}
            volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: global-excludes
              mountPath: /config
            {{- range $mountName, $mount := .Values.cronjob.pvcMounts }}
            - name: {{ $mountName }}-volume
              mountPath: {{ $mount.mountPath }}
            {{- end }}
          volumes:
          - name: scripts
            configMap:
              name: restic-backup-script
              defaultMode: 0755
          - name: global-excludes
            configMap:
              name: restic-global-excludes
          {{- range $mountName, $mount := .Values.cronjob.pvcMounts }}
          - name: {{ $mountName }}-volume
            persistentVolumeClaim:
              claimName: {{ $appName }}-{{ $mountName }}-pvc
          {{- end }}
{{- end }}